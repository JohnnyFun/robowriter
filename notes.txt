- transform font to svg paths that axidraw can follow
  - https://stackoverflow.com/questions/7742148/how-to-convert-text-to-svg-paths


- Setup
  - create a docker file to install dependencies
    - Python 2.7
		- Windows SDK version 8.1
    - Node/npm recommended versions

- UI
  - svelte!
  - simple WYSIWYG editor with just a font-size picker
    - tabs translate to spaces...
  - print preview (more for debugging)
    - show svg output, ability to view svg and svg paths code
    - use simulator to show what will happen
  - configure settings
    - ability to tweak settings that make sense from UI...or at least a config json file

- Architecture
  - web app separate from the printer
  - printer plugin polymorphism
    - implement with simulator and real machine, be able to easily print to either

- Tests
  - cypress happy path
    - open home page
    - type into box
    - set font-size bigger
    - assert the svg that is generated is EXACTLY correct that will be sent to axidraw
      - put svg in hidden element 
  - cypress tests for WYSIWYG editor  
    - assert various inputs result in correct svg path output
      - tab translates to 2 spaces
      - capitalized letters, lowercase
      - line breaks work correctly with big or small font-sizes
    - assert can't go outside of bounds of machine  
      - long line of text should be converted based on font-size, etc. to multiple lines of text
      - long letter warns that the letter won't fit on a single paper and suggests to split it into multiple jobs
      - assert reasonable padding too--no path should come close to outside of sheet of paper
    - assert some variance in the chars?
      - just slightly modify all letters so they're never _exactly_ the same
        - be able to turn this off for tests that assert exact svg content


---------------------------
Scaling notes:
  - x/y to axidraw is 0-100% of the drawing area
    - so have a configuration json file where you can tell the width/height of the drawing surface in centimeters or something
      - then convert centimeters to pixels based on the computer monitor?



-----------------
axidraw cli or cncserver rest api?
  - sounds like cli simply takes an svg
    - but probably doesn't have a simulator? Maybe there's a different simulator?
    - might be cool to just build the svg up client-side, then send it server side and call the axidraw CLI--if that works, we might pretty much be complete!
  - but api is nice because you have simulator
    - and it too was written by the official company
    - looks like they have plans to add "svg direct load" feature...
      - LEFT OFF: load up alien boy
        - does it do it correctly? If so, what's different about the svg? Can you make the letters more like it?
          - might be trickier though...if it's not drawing chars correctly, like hershey does in inkscape...
            - if so, you'll need to probably use the CLI...unfortunately there's no simulator, but maybe you can hook in at the point it sends x/y and hit the api of simulator?
